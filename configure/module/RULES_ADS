
define patch_ads
for i in $(wildcard $(TOP)/patch/ADS/$(ADS_MODULE_VERSION)-*.p0.patch); do\
	printf "\nPatching %s with the file : %s\n" "$(ADS_SRC_PATH)" "$$i"; \
	patch -d $(ADS_SRC_PATH) --ignore-whitespace -p0 < $$i;\
done
endef


define patch_revert_ads
for i in $(wildcard $(TOP)/patch/ADS/$(ADS_MODULE_VERSION)-*.p0.patch); do\
	printf "\nReverting applied patch %s with the file : %s\n" "$(ADS_SRC_PATH)" "$$i"; \
	patch -R -d $(ADS_SRC_PATH) --ignore-whitespace -p0 < $$i;\
done
endef




.PHONY: adsinit adscheckout $(ADS_SRC_PATH) git-submodule-sync

adsinit: git-submodule-sync adscheckout

adscheckout: $(ADS_SRC_PATH)
	cd $(ADS_SRC_PATH) && git checkout $(ADS_MODULE_TAG)

$(ADS_SRC_PATH):
	$(QUIET) $(git_update)



.PHONY: adspatch adspatchrevert


## Apply Patch Files 
adspatch:
	$(QUIET) $(call patch_ads)

## Revert Patch Files 
adspatchrevert:
	$(QUIET) $(call patch_revert_ads)

adsbuild: 
	make -C ADS VERSION=$(ADS_MODULE_VERSION)


adsclean:
	$(QUIET) make -C ADS VERSION=$(ADS_MODULE_VERSION) clean


adsrebuild: adsclean adsbuild
	
	
	
